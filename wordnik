#!/bin/sh

options() {
   echo "Available options are" 
   echo "wordnik WORD        : Check if a word is in the local dictionary (uses aspell)"
   echo "wordnik WORD wordnik: Find the the definition of a word from wordnik"
   exit
}


if [ -z $1 ] ; then
  options
fi

if [ -z $2 ] ; then 
   echo $1 | \
   /usr/bin/aspell -a -c list 2> /dev/null | \
   awk -F: '{ print $2;}' | \
   sed -e 's/,/\n/g; /^$/d;'
   exit
fi

## Your wordnik.com user.name, password and authentication key
user_name="YOUR WORDNIK USERNAME"
password="YOUR WORDNIK PASSWORD"
apiKey="YOUR WORDNIK API KEY"
TOKENFILE="FILENAME WHERE YOU WANT TO KEEP YOUR WORDNIK TOKEN"

base_URL="http://api.wordnik.com/v4"

## In order to use the API, we must authenticate first
## then we get a token and use this token until it expires.
if [ ! -e $TOKENFILE ] ; then
   curl -H api_key:$apiKey $base_URL/account.json/apiTokenStatus 2> /dev/null > ~/local/tmp/wordnik_token
   results=`cat ~/local/tmp/wordnik_token | cut -c3-4`
   if [ $results = "va" ] ; then
      echo "your token is valid" 
   fi 
   curl -H api_key:$apiKey $base_URL/account.json/authenticate/$user_name?password=$password 2> /dev/null | \
   sed -e 's/[{}]//g; s/[,:]/\ /g; s/"/\ /g;' > $TOKENFILE
fi

token=`awk '{ print $2; }' $TOKENFILE`
command="-H api_key:$apiKey -H token:$token"

## This is where the dirty magic happens
case $2 in
  wordnik)
    curl $command $base_URL/word.json/$1/definitions 2> /dev/null | \
    sed -e 's/","/\n/g;' | grep ^text | awk -F\":\" '{print $2;}' 
  ;;
  *|help)
    options
  ;;
esac

